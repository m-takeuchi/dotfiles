#######################################
# Âü∫Êú¨Ë®≠ÂÆö 
########################################
# Prefix
unbind-key C-b
set-option -g prefix C-z
bind-key C-z send-prefix
set-window-option -g mode-keys emacs

# Êó•Êú¨Ë™ûÁí∞Â¢É
#setw -g utf8 on
#set -g status-utf8 on
#set-window-option -g utf8 on

# „Éû„Ç¶„ÇπÊìç‰Ωú„ÇíÊúâÂäπ„Å´„Åô„Çã
setw -g mouse

# Use emacs keybindings in copy mode
#setw -g mode-keys emacs


########################################
# KeyBinding
########################################
bind C-r source-file ~/.tmux.conf

# pane & window
unbind 1
unbind ^C
unbind &
bind 1 break-pane
bind 2 split-window -v
bind 3 split-window -h
bind C-k kill-pane
bind i display-panes
bind C-K kill-window
bind C-t next-window
bind c  new-window

# prev ^P p 
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window

# next ^N n 
unbind ^N
bind ^N next-window
unbind n
bind n next-window



### copy
# unbind -t emacs-copy M-w
unbind -Tcopy-mode M-w
#bind -Tcopy-mode M-w

# set C-b to corsor-left in copy-mode
bind-key -Tcopy-mode C-b send-keys -X cursor-left

## for linux
# if-shell "uname | grep -q Linux" "bind-key -t emacs-copy M-w copy-pipe \"$(xsel -bi)\"";
if-shell "uname | grep -q Linux" "bind-key -Tcopy-mode M-w send -X copy-pipe \"$(xsel -bi)\"";
if-shell "uname | grep -q Linux" "bind-key ] run 'tmux set-buffer -- \"$(xsel -bo)\"; tmux paste-buffer'"

## for mac
# if-shell "uname | grep -q Darwin" "bind-key -t emacs-copy M-w copy-pipe \"pbcopy\"";
if-shell "uname | grep -q Darwin" "bind-key -Tcopy-mode M-w send -X copy-pipe \"reattach-to-user-namespace pbcopy\"";
if-shell "uname | grep -q Darwin" "bind-key ] run 'tmux set-buffer -- \"$(reattach-to-user-namespace pbpaste)\"; tmux paste-buffer'"

### zsh
# set -g default-shell /usr/local/bin/zsh
# set -g default-command /usr/local/bin/zsh
# set -g default-command "reattach-to-user-namespace -l /usr/local/bin/zsh"

set-option -g history-limit 10000



########################################
# Look & Feel default setting
########################################
#„Çπ„ÉÜ„Éº„Çø„Çπ„Éê„Éº
set-option -g status-interval 5     # „Çπ„ÉÜ„Éº„Çø„Çπ„Éê„Éº„Çí5ÁßíÊØé„Å´ÊèèÁîª„ÅóÁõ¥„Åô
set-option -g status-justify centre # „Çª„É≥„Çø„É©„Ç§„Ç∫Ôºà‰∏ª„Å´„Ç¶„Ç£„É≥„Éâ„Ç¶Áï™Âè∑„Å™„Å©Ôºâ
set-option -g status-position top   # „Çπ„ÉÜ„Éº„Çø„Çπ„Éê„Éº„Çí„Éà„ÉÉ„Éó„Å´ÈÖçÁΩÆ„Åô„Çã
# set-option -g status-position bottom
set-option -g status-left-length 90
set-option -g status-right-length 90
set-option -g status-left '#H:[#P]'
set-option -g status-right '[%y-%m-%d(%a) %H:%M]'
set -g status-bg black
# set -g status-bg blue
set -g status-fg white
set -g message-fg white
set -g message-bg red
set -g pane-active-border-fg white # „Ç¢„ÇØ„ÉÜ„Ç£„Éñ„Éö„Éº„É≥„ÅÆÂ¢ÉÁïåËâ≤

# window
set-window-option -g mode-bg white
set-window-option -g mode-fg black
set-window-option -g window-status-fg white
set-window-option -g window-status-bg black
set-window-option -g window-status-current-bg black
set-window-option -g window-status-current-fg green

# pane
set  -g pane-active-border-fg cyan
set  -g pane-active-border-bg black
setw -g window-status-current-fg blue

# color
set-option -g default-terminal xterm-256color


### tmux plugin
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'seebi/tmux-colors-solarized'
 
# in .tmux.conf
set -g @batt_discharging_icon "üîã:"
set -g status-right '#{battery_icon} #{battery_percentage} #{battery_remain} | %a %h-%d %H:%M '

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'


# if-shell "if type powerline-config 2>/dev/null 1>/dev/null" "run-shell \"powerline-daemon -q\"; "

### powerline Ë¶Å‰øÆÊ≠£
run-shell "powerline-daemon -q"
source "$HOME/.pyenv/versions/3.5.2/Python.framework/Versions/3.5/lib/python3.5/site-packages/powerline/bindings/tmux/powerline.conf"
# run-shell "export POWERLINE_CONF_PATH=`pip show powerline-status | grep Location | sed \"s/Location: //\"`/powerline/bindings/tmux/powerline.conf"
# run-shell "echo $POWERLINE_CONF_PATH"
